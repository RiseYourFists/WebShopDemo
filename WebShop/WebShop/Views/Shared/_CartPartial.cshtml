@model Cart;

<div class="shopping-cart-wrapper">
    <div class="shopping-cart">
        @{
            var isTrue = (bool?)TempData["UnfoldCart"];
            var unfold = isTrue == true ? "unfolded" : string.Empty;
            var items = Model.Items.Sum(i => i.Quantity);

            if (items > 0)
            {
                var display = (items > 99) ? "99+" : items.ToString();
                <span class="cart-count">@display</span>
            }
            <input checked type="checkbox" id="show-cart" class="toggle @unfold">
        }
        <label for="show-cart" class="show-cart fas fa-shopping-cart"></label>
        <div class="content">
            @{
                var isCartEmpty = Model.Items.Count == 0;

                <div class="item-list">
                    @if (!isCartEmpty)
                    {
                        @await Html.PartialAsync("Components/_CartListItemPartial", Model.Items)
                    }
                    else
                    {
                        <div class="list-row">
                            <p>The cart is currently empty.</p>
                        </div>
                    }
                </div>
                @if (!isCartEmpty)
                {
                    var price = $"{Model.TotalPrice:f2}";
                    <div class="bottom-bar">
                        <span class="total">Total: @price$</span>
                        <a asp-controller="Cart" asp-action="Checkout" class="checkout-btn"><i class="fas fa-money-check-alt"></i>Check out</a>
                    </div>
                }
            }
        </div>
    </div>
</div>
